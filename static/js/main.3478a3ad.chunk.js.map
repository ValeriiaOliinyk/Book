{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","box","protoTypes","PropTypes","node","isRequired","string","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getFilter","contacts","filter","getVisibleContacts","createSelector","contatcs","normalizedFilter","toLocaleLowerCase","contact","name","toLowerCase","includes","connect","state","value","dispatch","onChange","e","contactsActions","target","label","type","input","placeholder","axios","defaults","baseURL","get","then","data","catch","error","number","post","id","delete","ContactForm","updateContacts","setState","reset","getSameName","props","some","trim","handleSubmit","preventDefault","alert","onSubmit","this","form","button","Component","contactsOperations","Contact","onDeleteContact","text","onClick","list","map","key","item","ContactList","App","fetchContacts","length","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3478a3ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1yn4j\",\"input\":\"ContactForm_input__3PjAc\",\"form\":\"ContactForm_form__iwafZ\",\"button\":\"ContactForm_button__3a839\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__t1jFp\",\"box\":\"Section_box__2pzf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2uLAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1mP7v\",\"text\":\"Contact_text__2Se-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2iDFu\",\"item\":\"ContactList_item__1JU4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1071t\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children, title }) => (\n  <>\n    <h2 className={styles.title}>{title}</h2>\n    <div className={styles.box}>{children}</div>\n  </>\n);\n\nSection.protoTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contact/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contact/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contact/fetchContactsError');\n\nexport const addContactRequest = createAction('contact/addContactRequest');\nexport const addContactSuccess = createAction('contact/addContactSuccess');\nexport const addContactError = createAction('contact/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contact/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contact/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contact/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/change');\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = ({ contacts }) => contacts.filter;\n\nconst getAllContatcs = ({ contacts: { contacts } }) => contacts;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContatcs, getFilter],\n  (contatcs, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contatcs.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <br />\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={styles.input}\n      placeholder=\"Type name... \"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/phonebook';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  updateContacts = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  getSameName = name => {\n    const { contacts } = this.props;\n    return contacts.some(contact => contact.name === name.trim());\n  };\n\n  handleSubmit = e => {\n    const { number, name } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      alert(`Add name please!`);\n      this.reset();\n      return;\n    }\n\n    if (this.getSameName(name)) {\n      alert(`${name.trim()} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label>\n          Name <br />\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type name... \"\n          />\n        </label>\n        <label className={styles.label}>\n          Number <br />\n          <input\n            type=\"text\"\n            value={number}\n            name=\"number\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type number... \"\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDeleteContact }) => (\n  <>\n    <p className={styles.text}>\n      {name}: {number}\n    </p>\n    <button onClick={onDeleteContact} className={styles.button}>\n      Delete\n    </button>\n  </>\n);\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={styles.item}>\n        <Contact\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n          id={id}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect()(ContactList);\n","import { connect } from 'react-redux';\nimport contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// Base\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport { contactsOperations } from './redux/phonebook';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length >= 2 && <Filter />}\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts: contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}