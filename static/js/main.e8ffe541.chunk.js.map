{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","box","protoTypes","PropTypes","node","isRequired","string","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","filter","connect","state","value","contacts","dispatch","onChange","e","contactsActions","target","label","type","input","placeholder","ContactForm","updateContacts","setState","reset","getSameName","props","some","contact","trim","handleSubmit","preventDefault","alert","onSubmit","this","form","button","Component","phonebookActions","Contact","onDeleteContact","text","onClick","ContactList","list","map","key","item","getVisibleContacts","allContacts","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","length","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,IAAM,uB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,wB,mBCA1DD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,4B,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,+B,6JCWfC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKC,UAAWC,IAAOC,WAAYH,I,iCCD/BI,EAAU,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUK,EAAb,EAAaA,MAAb,OACd,oCACE,wBAAIJ,UAAWC,IAAOG,OAAQA,GAC9B,yBAAKJ,UAAWC,IAAOI,KAAMN,KAIjCI,EAAQG,WAAa,CACnBP,SAAUQ,IAAUC,KAAKC,WACzBL,MAAOG,IAAUG,OAAOD,YAGXN,I,EAAAA,I,wBCAA,GAAEQ,WAXEC,YAAa,iBAAiB,SAACC,EAAMC,GAAP,MAAmB,CAClEC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAOyBK,cAHPP,YAAa,oBAGSQ,OAF7BR,YAAa,qB,iBCmBbS,eARS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAME,SAASJ,WAGG,SAAAK,GAAQ,MAAK,CACtCC,SAAU,SAAAC,GAAC,OAAIF,EAASG,EAAgBR,OAAOO,EAAEE,OAAON,YAG3CF,EA3BA,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAOG,EAAV,EAAUA,SAAV,OACb,2BAAO1B,UAAWC,IAAO6B,OAAzB,wBAEE,6BACA,2BACEC,KAAK,OACLR,MAAOA,EACPG,SAAUA,EACV1B,UAAWC,IAAO+B,MAClBC,YAAY,sB,wDCVZC,E,4MACJZ,MAAQ,CAAET,KAAM,GAAIC,OAAQ,I,EAE5BqB,eAAiB,SAAAR,GAAM,IAAD,EACIA,EAAEE,OAAlBhB,EADY,EACZA,KAAMU,EADM,EACNA,MACd,EAAKa,SAAL,eAAiBvB,EAAOU,K,EAG1Bc,MAAQ,WACN,EAAKD,SAAS,CAAEvB,KAAM,GAAIC,OAAQ,M,EAGpCwB,YAAc,SAAAzB,GAEZ,OADqB,EAAK0B,MAAlBf,SACQgB,MAAK,SAAAC,GAAO,OAAIA,EAAQ5B,OAASA,EAAK6B,W,EAGxDC,aAAe,SAAAhB,GAAM,IAAD,EACO,EAAKL,MAAtBR,EADU,EACVA,OAAQD,EADE,EACFA,KAGhB,OAFAc,EAAEiB,iBAEW,KAAT/B,GACFgC,MAAM,yBACN,EAAKR,SAIH,EAAKC,YAAYzB,IACnBgC,MAAM,GAAD,OAAIhC,EAAK6B,OAAT,iCACL,EAAKL,UAGP,EAAKE,MAAMO,SAASjC,EAAMC,QAC1B,EAAKuB,U,uDAGG,IAAD,EACkBU,KAAKzB,MAAtBT,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMgC,SAAUC,KAAKJ,aAAc3C,UAAWC,IAAO+C,MACnD,uCACO,6BACL,2BACEjB,KAAK,OACLR,MAAOV,EACPA,KAAK,OACLa,SAAUqB,KAAKZ,eACfnC,UAAWC,IAAO+B,MAClBC,YAAY,mBAGhB,2BAAOjC,UAAWC,IAAO6B,OAAzB,UACS,6BACP,2BACEC,KAAK,OACLR,MAAOT,EACPD,KAAK,SACLa,SAAUqB,KAAKZ,eACfnC,UAAWC,IAAO+B,MAClBC,YAAY,qBAGhB,6BACA,4BAAQF,KAAK,SAAS/B,UAAWC,IAAOgD,QAAxC,oB,GAhEkBC,aAiFX7B,eATS,SAAC,GAAD,MAAiC,CACvDG,SADsB,EAAGA,SAAYA,aAIZ,SAAAC,GAAQ,MAAK,CACtCqB,SAAU,SAACjC,EAAMC,GAAP,OACRW,EAAS0B,EAAiBxC,WAAWE,EAAMC,QAGhCO,CAA6Ca,G,iBCxE7CkB,EAXC,SAAC,GAAD,IAAGvC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQuC,EAAjB,EAAiBA,gBAAjB,OACd,oCACE,uBAAGrD,UAAWC,IAAOqD,MAClBzC,EADH,KACWC,GAEX,4BAAQyC,QAASF,EAAiBrD,UAAWC,IAAOgD,QAApD,Y,iBCwBWO,EA1BK,SAAC,GAAD,IAAGhC,EAAH,EAAGA,SAAU6B,EAAb,EAAaA,gBAAb,OAClB,wBAAIrD,UAAWC,IAAOwD,MACnBjC,EAASkC,KAAI,gBAAG7C,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQE,EAAjB,EAAiBA,GAAjB,OACZ,wBAAI2C,IAAK3C,EAAIhB,UAAWC,IAAO2D,MAC7B,kBAAC,EAAD,CACE/C,KAAMA,EACNC,OAAQA,EACRuC,gBAAiB,kBAAMA,EAAgBrC,IACvCA,GAAIA,UCVR6C,EAAqB,SAACC,EAAa1C,GACvC,IAAM2C,EAAmB3C,EAAO4C,oBAChC,OAAOF,EAAY1C,QAAO,SAAAqB,GAAO,OAC/BA,EAAQ5B,KAAKoD,cAAcC,SAASH,OAYzB1C,eARS,SAAC,GAAD,QAAGG,SAAYA,EAAf,EAAeA,SAAUJ,EAAzB,EAAyBA,OAAzB,MAAyC,CAC/DI,SAAUqC,EAAmBrC,EAAUJ,OAGd,SAAAK,GAAQ,MAAK,CACtC4B,gBAAiB,SAAArC,GAAE,OAAIS,EAASG,EAAgBT,cAAcH,QAGjDK,CAA6CmC,GCU7CnC,eAJS,SAAC,GAAD,MAAiC,CACvDG,SADsB,EAAGA,SAAYA,YAIC,KAAzBH,EAlBH,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASpB,MAAM,aACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASA,MAAM,YACZoB,EAAS2C,QAAU,GAAK,kBAAC,EAAD,MACzB,kBAAC,EAAD,W,+CCfF3C,EAAW4C,YAAc,IAAD,mBAC3BC,EAAQ1D,YAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OAD7B,cAE3BsD,EAAQlD,eAAgB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACvBO,EAAMF,QAAO,qBAAGJ,KAAgBD,QAHN,IAMxBK,EAASgD,YAAc,GAAD,eACzBC,EAAQjD,QAAS,SAACkD,EAAD,YAAMvD,YAGXwD,cAAgB,CAC7B/C,WACAJ,WCJIoD,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAaaC,EAVDC,YAAe,CAC3BC,QAAS,CACP7D,SAAU8D,GAEZd,aACAe,UAAUC,I,YChBZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GAEf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAKNS,SAASC,eAAe,W","file":"static/js/main.e8ffe541.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1yn4j\",\"input\":\"ContactForm_input__3PjAc\",\"form\":\"ContactForm_form__iwafZ\",\"button\":\"ContactForm_button__3a839\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__t1jFp\",\"box\":\"Section_box__2pzf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2uLAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1mP7v\",\"text\":\"Contact_text__2Se-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2iDFu\",\"item\":\"ContactList_item__1JU4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1071t\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children, title }) => (\n  <>\n    <h2 className={styles.title}>{title}</h2>\n    <div className={styles.box}>{children}</div>\n  </>\n);\n\nSection.protoTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortId from 'shortid';\n\n// const addContact = (name, number) => dispatch => {};\n\nconst addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: shortId.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\nconst filter = createAction('phonebook/change');\n\nexport default { addContact, deleteContact, filter };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <br />\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={styles.input}\n      placeholder=\"Type name... \"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  updateContacts = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  getSameName = name => {\n    const { contacts } = this.props;\n    return contacts.some(contact => contact.name === name.trim());\n  };\n\n  handleSubmit = e => {\n    const { number, name } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      alert(`Add name please!`);\n      this.reset();\n      return;\n    }\n\n    if (this.getSameName(name)) {\n      alert(`${name.trim()} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label>\n          Name <br />\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type name... \"\n          />\n        </label>\n        <label className={styles.label}>\n          Number <br />\n          <input\n            type=\"text\"\n            value={number}\n            name=\"number\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type number... \"\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDeleteContact }) => (\n  <>\n    <p className={styles.text}>\n      {name}: {number}\n    </p>\n    <button onClick={onDeleteContact} className={styles.button}>\n      Delete\n    </button>\n  </>\n);\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Contact from '../Contact';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={styles.item}>\n        <Contact\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n          id={id}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\nimport ContactList from './ContactList';\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLocaleLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// Base\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length >= 2 && <Filter />}\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts: contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}